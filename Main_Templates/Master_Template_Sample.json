{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "CustomerName": {
      "type": "string",
      "metadata": {
        "description": "Customer  name."
      }
    },
    "VMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    //"dnsLabelPrefix": {
    //  "type": "string",
    //  "metadata": {
    //    "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
    //  }
    //},
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Nano-Server-Technical-Preview",
        "2016-Technical-Preview-with-Containers",
        "Windows-Server-Technical-Preview"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "VMSize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "allowedValues": [
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5"
      ],
      "metadata": {
        "description": "The size of the VM."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Change this value to your repo name if deploying from a fork"
      },
      "defaultValue": "https://raw.githubusercontent.com/djnavarrete/paragondev/master/Resources"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Auto-generated token to access _artifactsLocation",
        "artifactsLocationSasToken": ""
      },
      "defaultValue": ""
    }


  
  },//End of Parameters


  "variables": {
    "dnsLabelPrefix": "irmcvm1-pip",
    "storageAccountName": "satestvmcreate",
    "nicName": "[concat(parameters('VMName'),'-Nic')]",
    "publicIPAddressName": "[concat(parameters('VMName'),'-PublicIP')]",
    "virtualNetworkName": "[concat(parameters('CustomerName'),'VNET01')]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('VNetObject').subnet2Name)]",
    "VNetObject": {
      "Name": "[concat(parameters('CustomerName'),'VNET01')]",
      "AddressPrefix": "172.31.0.0/22",
      "subnet1Name": "DCs",
      "subnet1Prefix": "172.31.0.0/25",
      "subnet2Name": "Subnet-1",
      "subnet2Prefix": "172.31.0.128/25",
      "subnet3Name": "Subnet-2",
      "subnet3Prefix": "172.31.1.0/25",
      "subnet4Name": "Subnet-3",
      "subnet4Prefix": "172.31.1.128/25",
      "subnet5Name": "Subnet-4",
      "subnet5Prefix": "172.31.2.0/25",
      "subnet6Name": "Subnet-5",
      "subnet6Prefix": "172.31.2.128/25",
      "subnet7Name": "Subnet-6",
      "subnet7Prefix": "172.31.3.0/25",
      "subnet8Name": "External",
      "subnet8Prefix": "172.31.3.128/29"
    },
    "ASObject": {
      "AsName": "[concat(parameters('VMName'),'-AS')]",
      "AsLocation": "East US"
    },
      "StorageAccountObject": {
        "Name": "satest",
        "SkuName": "Standard_LRS"

      }
      "PIPObject": {
        "Name": "[concat(parameters('VMName'),'-pip')]",
        "AllocationMethod": "Dynamic",
        "DnsLabelPrefix":  "variables('dnsLabelPrefix')"

      }
  
  
  },
  "resources": [
   {
    "name": "AvailabilitySetResource",
    "type": "Microsoft.Resources/deployments",
    "apiVersion": "2016-02-01",
    "dependsOn": [],
    "properties": {
        "mode": "Incremental",
      "templateLink": {
        //"uri": "[concat('https://satestjasim.blob.core.windows.net/templates/availability_set.json', parameters('sasToken'))]",
       //"uri": "[concat(parameters('_artifactsLocation'),'/','availability_set.json', parameters('_artifactsLocationSasToken'))]",
        "uri": "[concat(parameters('_artifactsLocation'),'/','availability_set.json')]",
        "contentVersion": "1.0.0.0"
      },
      "parameters": {
        "ASObject": {
          //"value": "[concat(parameters('VMName'),'-','availabilityset')]"
          "value": "[variables('ASObject')]"
        }
      }
    }
  },

    {
    "name": "StorageAccountResource",
    "type": "Microsoft.Resources/deployments",
    "apiVersion": "2016-02-01",
    "dependsOn": [],
    "properties": {
        "mode": "Incremental",
      "templateLink": {
        //"uri": "[concat('https://satestjasim.blob.core.windows.net/templates/storage_account.json', parameters('sasToken'))]",
       //"uri": "[concat(parameters('_artifactsLocation'),'/','availability_set.json', parameters('_artifactsLocationSasToken'))]",
        "uri": "[concat(parameters('_artifactsLocation'),'/','storage_account.json')]",
        "contentVersion": "1.0.0.0"
      },
      "parameters": {
        "StorageAccountObject": {
          //"value": "[concat(parameters('VMName'),'-','availabilityset')]"
          "value": "[variables('StorageAccountObject')]"
        }
      }
    }    
    },
    {
    "name": "PublicIPResource",
    "type": "Microsoft.Resources/deployments",
    "apiVersion": "2016-02-01",
    "dependsOn": [],
    "properties": {
        "mode": "Incremental",
      "templateLink": {
        //"uri": "[concat('https://satestjasim.blob.core.windows.net/templates/storage_account.json', parameters('sasToken'))]",
       //"uri": "[concat(parameters('_artifactsLocation'),'/','availability_set.json', parameters('_artifactsLocationSasToken'))]",
        "uri": "[concat(parameters('_artifactsLocation'),'/','public_IP.json')]",
        "contentVersion": "1.0.0.0"
      },
      "parameters": {
        "PIPObject": {
          //"value": "[concat(parameters('VMName'),'-','availabilityset')]"
          "value": "[variables('PIPObject')]"
        }
      }
    }    
    },
    {
      "name": "VirtualNetworkResource",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/djnavarrete/paragondev/master/Resources/full_vnet.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "VNetObject": {
            "value": "[variables('VNetObject')]"
          }
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
   //     "[resourceid('Microsoft.Resources/deployments/','VirtualNetworkResource')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      //"apiVersion": "2015-06-15",
      //"type": "Microsoft.Compute/virtualMachines",
      //"name": "[parameters('VMName')]",
      //"location": "[resourceGroup().location]",

      "name": "ProvisioningVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        //"Microsoft.Resources/deployments/CreatingStorageAccounts",
        //"Microsoft.Resources/deployments/CreatingNetworkInterfaces",
        //"Microsoft.Resources/deployments/CreatingAvailabilitySets"
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
        "[resourceid('Microsoft.Resources/deployments/', 'AvailabilitySet')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','VM.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMName": {
            "value": "[parameters('VMName')]"
          },
          "VMSize": {
            "value": "[parameters('VMSize')]"
          },
          "ASName": {
            "value": "[variables('ASObject').ASName]"
          },
          "nicName": {
            "value": "[variables('nicName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "windowsOSVersion": {
            "value": "[parameters('windowsOSVersion')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "hostname": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
    }
  }
}